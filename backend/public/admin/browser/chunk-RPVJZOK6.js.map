{
  "version": 3,
  "sources": ["src/app/services/leaderboard.service.ts", "src/app/components/leaderboard/leaderboard.component.ts", "src/app/components/leaderboard/leaderboard.component.html"],
  "sourcesContent": ["/**\r\n * @fileoverview Leaderboard Service\r\n * @description Angular service for handling leaderboard API communication\r\n * Provides methods to fetch question leaderboards, exam paper leaderboards,\r\n * combined metrics, and admin statistics\r\n * \r\n * @author NexPrepAI Development Team\r\n * @since 1.0.0\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\n\r\n/**\r\n * Interface for leaderboard entry containing admin info and metrics\r\n */\r\nexport interface LeaderboardEntry {\r\n  rank: number;\r\n  adminId: string;\r\n  adminName: string;\r\n  email: string;\r\n  count: number;\r\n  percentage?: number;\r\n}\r\n\r\n/**\r\n * Interface for combined leaderboard entry with both metrics\r\n */\r\nexport interface CombinedLeaderboardEntry {\r\n  rank: number;\r\n  adminId: string;\r\n  adminName: string;\r\n  email: string;\r\n  questionsCount: number;\r\n  examPapersCount: number;\r\n  totalContributions: number;\r\n  questionsPercentage?: number;\r\n  examPapersPercentage?: number;\r\n}\r\n\r\n/**\r\n * Interface for leaderboard response\r\n */\r\nexport interface LeaderboardResponse {\r\n  success: boolean;\r\n  data: {\r\n    period: string;\r\n    totalCount: number;\r\n    leaderboard: LeaderboardEntry[];\r\n  };\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * Interface for combined leaderboard response\r\n */\r\nexport interface CombinedLeaderboardResponse {\r\n  success: boolean;\r\n  data: {\r\n    period: string;\r\n    totalQuestions: number;\r\n    totalExamPapers: number;\r\n    totalContributions: number;\r\n    leaderboard: CombinedLeaderboardEntry[];\r\n  };\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * Interface for admin statistics\r\n */\r\nexport interface AdminStats {\r\n  adminId: string;\r\n  adminName: string;\r\n  email: string;\r\n  periods: {\r\n    today: { questions: number; examPapers: number; total: number };\r\n    last7Days: { questions: number; examPapers: number; total: number };\r\n    last30Days: { questions: number; examPapers: number; total: number };\r\n    allTime: { questions: number; examPapers: number; total: number };\r\n  };\r\n}\r\n\r\n/**\r\n * Interface for admin statistics response\r\n */\r\nexport interface AdminStatsResponse {\r\n  success: boolean;\r\n  data: {\r\n    admins: AdminStats[];\r\n    summary: {\r\n      totalAdmins: number;\r\n      totalQuestions: number;\r\n      totalExamPapers: number;\r\n      totalContributions: number;\r\n    };\r\n  };\r\n  message?: string;\r\n}\r\n\r\n/**\r\n * Time period options for leaderboard filtering\r\n */\r\nexport type TimePeriod = 'today' | '7days' | '30days' | 'alltime';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LeaderboardService {\r\n  private readonly apiUrl = `${environment.apiUrl}/leaderboard`;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Get question addition leaderboard\r\n   * @param period Time period filter\r\n   * @returns Observable of leaderboard response\r\n   */\r\n  getQuestionLeaderboard(period: TimePeriod = 'alltime'): Observable<LeaderboardResponse> {\r\n    const params = new HttpParams().set('period', period);\r\n    return this.http.get<LeaderboardResponse>(`${this.apiUrl}/questions`, { params });\r\n  }\r\n\r\n  /**\r\n   * Get exam paper creation leaderboard\r\n   * @param period Time period filter\r\n   * @returns Observable of leaderboard response\r\n   */\r\n  getExamPaperLeaderboard(period: TimePeriod = 'alltime'): Observable<LeaderboardResponse> {\r\n    const params = new HttpParams().set('period', period);\r\n    return this.http.get<LeaderboardResponse>(`${this.apiUrl}/exam-papers`, { params });\r\n  }\r\n\r\n  /**\r\n   * Get combined leaderboard with both metrics\r\n   * @param period Time period filter\r\n   * @returns Observable of combined leaderboard response\r\n   */\r\n  getCombinedLeaderboard(period: TimePeriod = 'alltime'): Observable<CombinedLeaderboardResponse> {\r\n    const params = new HttpParams().set('period', period);\r\n    return this.http.get<CombinedLeaderboardResponse>(`${this.apiUrl}/combined`, { params });\r\n  }\r\n\r\n  /**\r\n   * Get comprehensive admin statistics\r\n   * @returns Observable of admin statistics response\r\n   */\r\n  getAdminStats(): Observable<AdminStatsResponse> {\r\n    return this.http.get<AdminStatsResponse>(`${this.apiUrl}/stats`);\r\n  }\r\n\r\n  /**\r\n   * Get formatted period display name\r\n   * @param period Time period\r\n   * @returns Formatted display name\r\n   */\r\n  getPeriodDisplayName(period: TimePeriod): string {\r\n    const periodNames: Record<TimePeriod, string> = {\r\n      'today': 'Today',\r\n      '7days': 'Last 7 Days',\r\n      '30days': 'Last 30 Days',\r\n      'alltime': 'All Time'\r\n    };\r\n    return periodNames[period];\r\n  }\r\n\r\n  /**\r\n   * Get all available time periods\r\n   * @returns Array of time period options\r\n   */\r\n  getAvailablePeriods(): Array<{ value: TimePeriod; label: string }> {\r\n    return [\r\n      { value: 'today', label: 'Today' },\r\n      { value: '7days', label: 'Last 7 Days' },\r\n      { value: '30days', label: 'Last 30 Days' },\r\n      { value: 'alltime', label: 'All Time' }\r\n    ];\r\n  }\r\n}\r\n", "/**\r\n * @fileoverview Leaderboard Component\r\n * @description Component for displaying admin leaderboards including question\r\n * additions, exam paper creations, and combined metrics with time-based filtering\r\n * \r\n * @author NexPrep Development Team\r\n * @since 1.0.0\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { \r\n  LeaderboardService, \r\n  LeaderboardResponse, \r\n  CombinedLeaderboardResponse, \r\n  AdminStatsResponse,\r\n  TimePeriod,\r\n  LeaderboardEntry,\r\n  CombinedLeaderboardEntry,\r\n  AdminStats\r\n} from '../../services/leaderboard.service';\r\n\r\n@Component({\r\n  selector: 'app-leaderboard',\r\n  templateUrl: './leaderboard.component.html',\r\n  styleUrls: ['./leaderboard.component.scss'],\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule]\r\n})\r\nexport class LeaderboardComponent implements OnInit {\r\n  // Current view state\r\n  activeTab: 'questions' | 'examPapers' | 'combined' | 'stats' = 'combined';\r\n  selectedPeriod: TimePeriod = 'alltime';\r\n  \r\n  // Loading states\r\n  loading = {\r\n    questions: false,\r\n    examPapers: false,\r\n    combined: false,\r\n    stats: false\r\n  };\r\n  \r\n  // Data storage\r\n  questionLeaderboard: LeaderboardEntry[] = [];\r\n  examPaperLeaderboard: LeaderboardEntry[] = [];\r\n  combinedLeaderboard: CombinedLeaderboardEntry[] = [];\r\n  adminStats: AdminStats[] = [];\r\n  \r\n  // Metadata\r\n  questionMetadata = { totalCount: 0 };\r\n  examPaperMetadata = { totalCount: 0 };\r\n  combinedMetadata = { \r\n    totalQuestions: 0, \r\n    totalExamPapers: 0, \r\n    totalContributions: 0 \r\n  };\r\n  statsMetadata = {\r\n    totalAdmins: 0,\r\n    totalQuestions: 0,\r\n    totalExamPapers: 0,\r\n    totalContributions: 0\r\n  };\r\n  \r\n  // Error handling\r\n  error: string | null = null;\r\n  \r\n  // Configuration\r\n  availablePeriods: Array<{ value: TimePeriod; label: string }> = [];\r\n\r\n  constructor(private leaderboardService: LeaderboardService) {\r\n    this.availablePeriods = this.leaderboardService.getAvailablePeriods();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadInitialData();\r\n  }\r\n\r\n  /**\r\n   * Load initial data for all tabs\r\n   */\r\n  private loadInitialData(): void {\r\n    this.loadCombinedLeaderboard();\r\n    this.loadAdminStats();\r\n  }\r\n\r\n  /**\r\n   * Handle tab change\r\n   */\r\n  onTabChange(tab: 'questions' | 'examPapers' | 'combined' | 'stats'): void {\r\n    this.activeTab = tab;\r\n    this.error = null;\r\n    \r\n    switch (tab) {\r\n      case 'questions':\r\n        if (this.questionLeaderboard.length === 0) {\r\n          this.loadQuestionLeaderboard();\r\n        }\r\n        break;\r\n      case 'examPapers':\r\n        if (this.examPaperLeaderboard.length === 0) {\r\n          this.loadExamPaperLeaderboard();\r\n        }\r\n        break;\r\n      case 'combined':\r\n        if (this.combinedLeaderboard.length === 0) {\r\n          this.loadCombinedLeaderboard();\r\n        }\r\n        break;\r\n      case 'stats':\r\n        if (this.adminStats.length === 0) {\r\n          this.loadAdminStats();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle period change\r\n   */\r\n  onPeriodChange(period: TimePeriod): void {\r\n    this.selectedPeriod = period;\r\n    this.error = null;\r\n    \r\n    // Reload current tab data\r\n    switch (this.activeTab) {\r\n      case 'questions':\r\n        this.loadQuestionLeaderboard();\r\n        break;\r\n      case 'examPapers':\r\n        this.loadExamPaperLeaderboard();\r\n        break;\r\n      case 'combined':\r\n        this.loadCombinedLeaderboard();\r\n        break;\r\n      // Stats doesn't need period filter as it shows all periods\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load question leaderboard\r\n   */\r\n  loadQuestionLeaderboard(): void {\r\n    this.loading.questions = true;\r\n    this.error = null;\r\n    \r\n    this.leaderboardService.getQuestionLeaderboard(this.selectedPeriod)\r\n      .subscribe({\r\n        next: (response: LeaderboardResponse) => {\r\n          if (response.success) {\r\n            this.questionLeaderboard = response.data.leaderboard;\r\n            this.questionMetadata.totalCount = response.data.totalCount;\r\n          } else {\r\n            this.error = response.message || 'Failed to load question leaderboard';\r\n          }\r\n          this.loading.questions = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading question leaderboard:', error);\r\n          this.error = 'Failed to load question leaderboard. Please try again.';\r\n          this.loading.questions = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Load exam paper leaderboard\r\n   */\r\n  loadExamPaperLeaderboard(): void {\r\n    this.loading.examPapers = true;\r\n    this.error = null;\r\n    \r\n    this.leaderboardService.getExamPaperLeaderboard(this.selectedPeriod)\r\n      .subscribe({\r\n        next: (response: LeaderboardResponse) => {\r\n          if (response.success) {\r\n            this.examPaperLeaderboard = response.data.leaderboard;\r\n            this.examPaperMetadata.totalCount = response.data.totalCount;\r\n          } else {\r\n            this.error = response.message || 'Failed to load exam paper leaderboard';\r\n          }\r\n          this.loading.examPapers = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading exam paper leaderboard:', error);\r\n          this.error = 'Failed to load exam paper leaderboard. Please try again.';\r\n          this.loading.examPapers = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Load combined leaderboard\r\n   */\r\n  loadCombinedLeaderboard(): void {\r\n    this.loading.combined = true;\r\n    this.error = null;\r\n    \r\n    this.leaderboardService.getCombinedLeaderboard(this.selectedPeriod)\r\n      .subscribe({\r\n        next: (response: CombinedLeaderboardResponse) => {\r\n          if (response.success) {\r\n            this.combinedLeaderboard = response.data.leaderboard;\r\n            this.combinedMetadata = {\r\n              totalQuestions: response.data.totalQuestions,\r\n              totalExamPapers: response.data.totalExamPapers,\r\n              totalContributions: response.data.totalContributions\r\n            };\r\n          } else {\r\n            this.error = response.message || 'Failed to load combined leaderboard';\r\n          }\r\n          this.loading.combined = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading combined leaderboard:', error);\r\n          this.error = 'Failed to load combined leaderboard. Please try again.';\r\n          this.loading.combined = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Load admin statistics\r\n   */\r\n  loadAdminStats(): void {\r\n    this.loading.stats = true;\r\n    this.error = null;\r\n    \r\n    this.leaderboardService.getAdminStats()\r\n      .subscribe({\r\n        next: (response: AdminStatsResponse) => {\r\n          if (response.success) {\r\n            this.adminStats = response.data.admins;\r\n            this.statsMetadata = response.data.summary;\r\n          } else {\r\n            this.error = response.message || 'Failed to load admin statistics';\r\n          }\r\n          this.loading.stats = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error loading admin statistics:', error);\r\n          this.error = 'Failed to load admin statistics. Please try again.';\r\n          this.loading.stats = false;\r\n        }\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Get formatted period display name\r\n   */\r\n  getPeriodDisplayName(period: TimePeriod): string {\r\n    return this.leaderboardService.getPeriodDisplayName(period);\r\n  }\r\n\r\n  /**\r\n   * Get rank badge class based on position\r\n   */\r\n  getRankBadgeClass(rank: number): string {\r\n    if (rank === 1) return 'rank-gold';\r\n    if (rank === 2) return 'rank-silver';\r\n    if (rank === 3) return 'rank-bronze';\r\n    return 'rank-default';\r\n  }\r\n\r\n  /**\r\n   * Refresh current tab data\r\n   */\r\n  refreshData(): void {\r\n    switch (this.activeTab) {\r\n      case 'questions':\r\n        this.loadQuestionLeaderboard();\r\n        break;\r\n      case 'examPapers':\r\n        this.loadExamPaperLeaderboard();\r\n        break;\r\n      case 'combined':\r\n        this.loadCombinedLeaderboard();\r\n        break;\r\n      case 'stats':\r\n        this.loadAdminStats();\r\n        break;\r\n    }\r\n  }\r\n}\r\n", "<!-- Leaderboard Component Template -->\r\n<div class=\"min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-indigo-100 p-4 lg:p-6\">\r\n  <div class=\"max-w-7xl mx-auto\">\r\n    <!-- Header Section -->\r\n    <div class=\"bg-white rounded-2xl shadow-xl border border-gray-200 p-6 mb-8\">\r\n      <div class=\"flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4\">\r\n        <div class=\"flex-1\">\r\n          <h1 class=\"flex items-center gap-3 text-3xl font-bold text-gray-900 mb-2\">\r\n            <i class=\"fas fa-trophy text-yellow-500 text-2xl\"></i>\r\n            Admin Leaderboard\r\n          </h1>\r\n          <p class=\"text-gray-600 text-lg\">\r\n            Track admin contributions including question additions and exam paper creations\r\n          </p>\r\n        </div>\r\n        \r\n        <div class=\"flex items-center gap-4\">\r\n          <!-- Period Filter -->\r\n          <div class=\"flex items-center gap-3\" *ngIf=\"activeTab !== 'stats'\">\r\n            <label for=\"period-select\" class=\"text-sm font-semibold text-gray-700\">Time Period:</label>\r\n            <select \r\n              id=\"period-select\" \r\n              [(ngModel)]=\"selectedPeriod\" \r\n              (change)=\"onPeriodChange(selectedPeriod)\"\r\n              class=\"px-4 py-2 border-2 border-gray-300 rounded-lg bg-white text-gray-900 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 transition-all duration-200 cursor-pointer hover:border-gray-400\">\r\n              <option *ngFor=\"let period of availablePeriods\" [value]=\"period.value\">\r\n                {{ period.label }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n          \r\n          <!-- Refresh Button -->\r\n          <button \r\n            (click)=\"refreshData()\" \r\n            [disabled]=\"loading[activeTab]\"\r\n            title=\"Refresh Data\"\r\n            class=\"bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 disabled:opacity-50 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg transition-all duration-200 transform hover:scale-105 shadow-lg\">\r\n            <i class=\"fas fa-sync-alt text-lg\" [class.fa-spin]=\"loading[activeTab]\"></i>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Error Message -->\r\n    <div class=\"bg-gradient-to-r from-red-500 to-red-600 text-white p-4 rounded-lg mb-6 flex items-center gap-3 shadow-lg\" *ngIf=\"error\">\r\n      <i class=\"fas fa-exclamation-triangle text-xl\"></i>\r\n      <span class=\"font-medium\">{{ error }}</span>\r\n    </div>\r\n    <!-- Tab Navigation -->\r\n    <div class=\"bg-white rounded-2xl shadow-xl border border-gray-200 p-2 mb-8\">\r\n      <div class=\"flex flex-col sm:flex-row gap-2\">\r\n        <button \r\n          [class]=\"'flex-1 flex items-center justify-center gap-2 px-4 py-3 rounded-xl font-semibold transition-all duration-200 ' + (activeTab === 'combined' ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white shadow-lg' : 'text-gray-600 hover:bg-blue-50 hover:text-blue-600')\"\r\n          (click)=\"onTabChange('combined')\">\r\n          <i class=\"fas fa-chart-bar\"></i>\r\n          <span class=\"hidden sm:inline\">Combined Leaderboard</span>\r\n          <span class=\"sm:hidden\">Combined</span>\r\n        </button>\r\n        <button \r\n          [class]=\"'flex-1 flex items-center justify-center gap-2 px-4 py-3 rounded-xl font-semibold transition-all duration-200 ' + (activeTab === 'questions' ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white shadow-lg' : 'text-gray-600 hover:bg-blue-50 hover:text-blue-600')\"\r\n          (click)=\"onTabChange('questions')\">\r\n          <i class=\"fas fa-question-circle\"></i>\r\n          <span class=\"hidden sm:inline\">Questions Added</span>\r\n          <span class=\"sm:hidden\">Questions</span>\r\n        </button>\r\n        <button \r\n          [class]=\"'flex-1 flex items-center justify-center gap-2 px-4 py-3 rounded-xl font-semibold transition-all duration-200 ' + (activeTab === 'examPapers' ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white shadow-lg' : 'text-gray-600 hover:bg-blue-50 hover:text-blue-600')\"\r\n          (click)=\"onTabChange('examPapers')\">\r\n          <i class=\"fas fa-file-alt\"></i>\r\n          <span class=\"hidden sm:inline\">Exam Papers Created</span>\r\n          <span class=\"sm:hidden\">Exam Papers</span>\r\n        </button>\r\n        <button \r\n          [class]=\"'flex-1 flex items-center justify-center gap-2 px-4 py-3 rounded-xl font-semibold transition-all duration-200 ' + (activeTab === 'stats' ? 'bg-gradient-to-r from-blue-500 to-blue-600 text-white shadow-lg' : 'text-gray-600 hover:bg-blue-50 hover:text-blue-600')\"\r\n          (click)=\"onTabChange('stats')\">\r\n          <i class=\"fas fa-chart-line\"></i>\r\n          <span class=\"hidden sm:inline\">Statistics Overview</span>\r\n          <span class=\"sm:hidden\">Statistics</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n    <!-- Tab Content -->\r\n    <div class=\"space-y-6\">\r\n      \r\n      <!-- Combined Leaderboard Tab -->\r\n      <div *ngIf=\"activeTab === 'combined'\" class=\"animate-fadeIn\">\r\n        <div class=\"bg-white rounded-2xl shadow-xl border border-gray-200 p-6\">\r\n          <div class=\"mb-6\">\r\n            <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Combined Leaderboard - {{ getPeriodDisplayName(selectedPeriod) }}</h2>\r\n            <div class=\"grid grid-cols-1 sm:grid-cols-3 gap-4\" *ngIf=\"!loading.combined\">\r\n              <div class=\"bg-gradient-to-r from-blue-50 to-blue-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-blue-800\">{{ combinedMetadata.totalQuestions }}</div>\r\n                <div class=\"text-sm text-blue-600 font-medium\">Total Questions</div>\r\n              </div>\r\n              <div class=\"bg-gradient-to-r from-green-50 to-green-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-green-800\">{{ combinedMetadata.totalExamPapers }}</div>\r\n                <div class=\"text-sm text-green-600 font-medium\">Total Exam Papers</div>\r\n              </div>\r\n              <div class=\"bg-gradient-to-r from-purple-50 to-purple-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-purple-800\">{{ combinedMetadata.totalContributions }}</div>\r\n                <div class=\"text-sm text-purple-600 font-medium\">Total Contributions</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"loading.combined\">\r\n            <i class=\"fas fa-spinner fa-spin text-3xl text-blue-500 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">Loading combined leaderboard...</p>\r\n          </div>\r\n          \r\n          <div class=\"overflow-x-auto\" *ngIf=\"!loading.combined && combinedLeaderboard.length > 0\">\r\n            <table class=\"w-full\">\r\n              <thead>\r\n                <tr class=\"bg-gradient-to-r from-gray-800 to-gray-900 text-white\">\r\n                  <th class=\"px-4 py-4 text-left font-semibold rounded-tl-lg\">Rank</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Admin</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Questions</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Exam Papers</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Total</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold rounded-tr-lg\">Performance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>              <tbody>\r\n                <tr *ngFor=\"let entry of combinedLeaderboard\" \r\n                    [class]=\"'border-b border-gray-100 hover:bg-gray-50 transition-all duration-200 ' + \r\n                    (entry.rank === 1 ? 'bg-gradient-to-r from-yellow-50 to-yellow-100 border-l-4 border-yellow-400' : \r\n                     entry.rank === 2 ? 'bg-gradient-to-r from-gray-50 to-gray-100 border-l-4 border-gray-400' : \r\n                     entry.rank === 3 ? 'bg-gradient-to-r from-orange-50 to-orange-100 border-l-4 border-orange-400' : '')\">\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"flex items-center gap-2\">\r\n                      <div [class]=\"'w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ' + \r\n                           (entry.rank === 1 ? 'bg-yellow-400 text-yellow-900' : \r\n                            entry.rank === 2 ? 'bg-gray-400 text-gray-900' : \r\n                            entry.rank === 3 ? 'bg-orange-400 text-orange-900' : 'bg-blue-100 text-blue-800')\">\r\n                        <span *ngIf=\"entry.rank <= 3\">\r\n                          <i class=\"fas fa-trophy text-xs\" *ngIf=\"entry.rank === 1\"></i>\r\n                          <i class=\"fas fa-medal text-xs\" *ngIf=\"entry.rank === 2\"></i>\r\n                          <i class=\"fas fa-award text-xs\" *ngIf=\"entry.rank === 3\"></i>\r\n                        </span>\r\n                        <span *ngIf=\"entry.rank > 3\">{{ entry.rank }}</span>\r\n                      </div>\r\n                      <span class=\"font-medium text-gray-700\" *ngIf=\"entry.rank <= 3\">{{ entry.rank }}</span>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div>\r\n                      <div class=\"font-semibold text-gray-900\">{{ entry.adminName }}</div>\r\n                      <div class=\"text-sm text-gray-500\">{{ entry.email }}</div>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"flex flex-col\">\r\n                      <span class=\"font-semibold text-gray-900\">{{ entry.questionsCount }}</span>\r\n                      <span class=\"text-xs text-gray-500\" *ngIf=\"entry.questionsPercentage\">\r\n                        ({{ entry.questionsPercentage }}%)\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"flex flex-col\">\r\n                      <span class=\"font-semibold text-gray-900\">{{ entry.examPapersCount }}</span>\r\n                      <span class=\"text-xs text-gray-500\" *ngIf=\"entry.examPapersPercentage\">\r\n                        ({{ entry.examPapersPercentage }}%)\r\n                      </span>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <span class=\"font-bold text-lg text-blue-600\">{{ entry.totalContributions }}</span>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"w-full bg-gray-200 rounded-full h-3\">\r\n                      <div class=\"bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full transition-all duration-500\" \r\n                           [style.width.%]=\"(entry.totalContributions / combinedMetadata.totalContributions) * 100\">\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"!loading.combined && combinedLeaderboard.length === 0\">\r\n            <i class=\"fas fa-chart-bar text-4xl text-gray-400 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">No data available for the selected period.</p>\r\n          </div>\r\n        </div>\r\n      </div>      <!-- Questions Leaderboard Tab -->\r\n      <div *ngIf=\"activeTab === 'questions'\" class=\"animate-fadeIn\">\r\n        <div class=\"bg-white rounded-2xl shadow-xl border border-gray-200 p-6\">\r\n          <div class=\"mb-6\">\r\n            <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Question Addition Leaderboard - {{ getPeriodDisplayName(selectedPeriod) }}</h2>\r\n            <div class=\"bg-gradient-to-r from-green-50 to-green-100 p-4 rounded-xl text-center max-w-xs\" *ngIf=\"!loading.questions\">\r\n              <div class=\"text-2xl font-bold text-green-800\">{{ questionMetadata.totalCount }}</div>\r\n              <div class=\"text-sm text-green-600 font-medium\">Total Questions Added</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"loading.questions\">\r\n            <i class=\"fas fa-spinner fa-spin text-3xl text-green-500 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">Loading question leaderboard...</p>\r\n          </div>\r\n          \r\n          <div class=\"overflow-x-auto\" *ngIf=\"!loading.questions && questionLeaderboard.length > 0\">\r\n            <table class=\"w-full\">\r\n              <thead>\r\n                <tr class=\"bg-gradient-to-r from-gray-800 to-gray-900 text-white\">\r\n                  <th class=\"px-4 py-4 text-left font-semibold rounded-tl-lg\">Rank</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Admin</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Questions Added</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Percentage</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold rounded-tr-lg\">Performance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let entry of questionLeaderboard\" \r\n                    [class]=\"'border-b border-gray-100 hover:bg-gray-50 transition-all duration-200 ' + \r\n                    (entry.rank === 1 ? 'bg-gradient-to-r from-yellow-50 to-yellow-100 border-l-4 border-yellow-400' : \r\n                     entry.rank === 2 ? 'bg-gradient-to-r from-gray-50 to-gray-100 border-l-4 border-gray-400' : \r\n                     entry.rank === 3 ? 'bg-gradient-to-r from-orange-50 to-orange-100 border-l-4 border-orange-400' : '')\">\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"flex items-center gap-2\">\r\n                      <div [class]=\"'w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ' + \r\n                           (entry.rank === 1 ? 'bg-yellow-400 text-yellow-900' : \r\n                            entry.rank === 2 ? 'bg-gray-400 text-gray-900' : \r\n                            entry.rank === 3 ? 'bg-orange-400 text-orange-900' : 'bg-green-100 text-green-800')\">\r\n                        <span *ngIf=\"entry.rank <= 3\">\r\n                          <i class=\"fas fa-trophy text-xs\" *ngIf=\"entry.rank === 1\"></i>\r\n                          <i class=\"fas fa-medal text-xs\" *ngIf=\"entry.rank === 2\"></i>\r\n                          <i class=\"fas fa-award text-xs\" *ngIf=\"entry.rank === 3\"></i>\r\n                        </span>\r\n                        <span *ngIf=\"entry.rank > 3\">{{ entry.rank }}</span>\r\n                      </div>\r\n                      <span class=\"font-medium text-gray-700\" *ngIf=\"entry.rank <= 3\">{{ entry.rank }}</span>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div>\r\n                      <div class=\"font-semibold text-gray-900\">{{ entry.adminName }}</div>\r\n                      <div class=\"text-sm text-gray-500\">{{ entry.email }}</div>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <span class=\"font-bold text-lg text-green-600\">{{ entry.count }}</span>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <span class=\"font-medium text-gray-700\" *ngIf=\"entry.percentage\">\r\n                      {{ entry.percentage }}%\r\n                    </span>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"w-full bg-gray-200 rounded-full h-3\">\r\n                      <div class=\"bg-gradient-to-r from-green-500 to-green-600 h-3 rounded-full transition-all duration-500\" \r\n                           [style.width.%]=\"entry.percentage || 0\">\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"!loading.questions && questionLeaderboard.length === 0\">\r\n            <i class=\"fas fa-question-circle text-4xl text-gray-400 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">No questions added in the selected period.</p>\r\n          </div>\r\n        </div>\r\n      </div>      <!-- Exam Papers Leaderboard Tab -->\r\n      <div *ngIf=\"activeTab === 'examPapers'\" class=\"animate-fadeIn\">\r\n        <div class=\"bg-white rounded-2xl shadow-xl border border-gray-200 p-6\">\r\n          <div class=\"mb-6\">\r\n            <h2 class=\"text-2xl font-bold text-gray-900 mb-4\">Exam Paper Creation Leaderboard - {{ getPeriodDisplayName(selectedPeriod) }}</h2>\r\n            <div class=\"bg-gradient-to-r from-purple-50 to-purple-100 p-4 rounded-xl text-center max-w-xs\" *ngIf=\"!loading.examPapers\">\r\n              <div class=\"text-2xl font-bold text-purple-800\">{{ examPaperMetadata.totalCount }}</div>\r\n              <div class=\"text-sm text-purple-600 font-medium\">Total Exam Papers Created</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"loading.examPapers\">\r\n            <i class=\"fas fa-spinner fa-spin text-3xl text-purple-500 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">Loading exam paper leaderboard...</p>\r\n          </div>\r\n          \r\n          <div class=\"overflow-x-auto\" *ngIf=\"!loading.examPapers && examPaperLeaderboard.length > 0\">\r\n            <table class=\"w-full\">\r\n              <thead>\r\n                <tr class=\"bg-gradient-to-r from-gray-800 to-gray-900 text-white\">\r\n                  <th class=\"px-4 py-4 text-left font-semibold rounded-tl-lg\">Rank</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Admin</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Exam Papers Created</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold\">Percentage</th>\r\n                  <th class=\"px-4 py-4 text-left font-semibold rounded-tr-lg\">Performance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr *ngFor=\"let entry of examPaperLeaderboard\" \r\n                    [class]=\"'border-b border-gray-100 hover:bg-gray-50 transition-all duration-200 ' + \r\n                    (entry.rank === 1 ? 'bg-gradient-to-r from-yellow-50 to-yellow-100 border-l-4 border-yellow-400' : \r\n                     entry.rank === 2 ? 'bg-gradient-to-r from-gray-50 to-gray-100 border-l-4 border-gray-400' : \r\n                     entry.rank === 3 ? 'bg-gradient-to-r from-orange-50 to-orange-100 border-l-4 border-orange-400' : '')\">\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"flex items-center gap-2\">\r\n                      <div [class]=\"'w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ' + \r\n                           (entry.rank === 1 ? 'bg-yellow-400 text-yellow-900' : \r\n                            entry.rank === 2 ? 'bg-gray-400 text-gray-900' : \r\n                            entry.rank === 3 ? 'bg-orange-400 text-orange-900' : 'bg-purple-100 text-purple-800')\">\r\n                        <span *ngIf=\"entry.rank <= 3\">\r\n                          <i class=\"fas fa-trophy text-xs\" *ngIf=\"entry.rank === 1\"></i>\r\n                          <i class=\"fas fa-medal text-xs\" *ngIf=\"entry.rank === 2\"></i>\r\n                          <i class=\"fas fa-award text-xs\" *ngIf=\"entry.rank === 3\"></i>\r\n                        </span>\r\n                        <span *ngIf=\"entry.rank > 3\">{{ entry.rank }}</span>\r\n                      </div>\r\n                      <span class=\"font-medium text-gray-700\" *ngIf=\"entry.rank <= 3\">{{ entry.rank }}</span>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div>\r\n                      <div class=\"font-semibold text-gray-900\">{{ entry.adminName }}</div>\r\n                      <div class=\"text-sm text-gray-500\">{{ entry.email }}</div>\r\n                    </div>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <span class=\"font-bold text-lg text-purple-600\">{{ entry.count }}</span>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <span class=\"font-medium text-gray-700\" *ngIf=\"entry.percentage\">\r\n                      {{ entry.percentage }}%\r\n                    </span>\r\n                  </td>\r\n                  <td class=\"px-4 py-4\">\r\n                    <div class=\"w-full bg-gray-200 rounded-full h-3\">\r\n                      <div class=\"bg-gradient-to-r from-purple-500 to-purple-600 h-3 rounded-full transition-all duration-500\" \r\n                           [style.width.%]=\"entry.percentage || 0\">\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"!loading.examPapers && examPaperLeaderboard.length === 0\">\r\n            <i class=\"fas fa-file-alt text-4xl text-gray-400 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">No exam papers created in the selected period.</p>\r\n          </div>\r\n        </div>\r\n      </div>      <!-- Statistics Overview Tab -->\r\n      <div *ngIf=\"activeTab === 'stats'\" class=\"animate-fadeIn\">\r\n        <div class=\"bg-white rounded-2xl shadow-xl border border-gray-200 p-6\">\r\n          <div class=\"mb-8\">\r\n            <h2 class=\"text-2xl font-bold text-gray-900 mb-6\">Admin Statistics Overview</h2>\r\n            <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\" *ngIf=\"!loading.stats\">\r\n              <div class=\"bg-gradient-to-r from-blue-50 to-blue-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-blue-800\">{{ statsMetadata.totalAdmins }}</div>\r\n                <div class=\"text-sm text-blue-600 font-medium\">Total Admins</div>\r\n              </div>\r\n              <div class=\"bg-gradient-to-r from-green-50 to-green-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-green-800\">{{ statsMetadata.totalQuestions }}</div>\r\n                <div class=\"text-sm text-green-600 font-medium\">Total Questions</div>\r\n              </div>\r\n              <div class=\"bg-gradient-to-r from-purple-50 to-purple-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-purple-800\">{{ statsMetadata.totalExamPapers }}</div>\r\n                <div class=\"text-sm text-purple-600 font-medium\">Total Exam Papers</div>\r\n              </div>\r\n              <div class=\"bg-gradient-to-r from-indigo-50 to-indigo-100 p-4 rounded-xl text-center\">\r\n                <div class=\"text-2xl font-bold text-indigo-800\">{{ statsMetadata.totalContributions }}</div>\r\n                <div class=\"text-sm text-indigo-600 font-medium\">Total Contributions</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"loading.stats\">\r\n            <i class=\"fas fa-spinner fa-spin text-3xl text-indigo-500 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">Loading statistics...</p>\r\n          </div>\r\n          \r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-6\" *ngIf=\"!loading.stats && adminStats.length > 0\">\r\n            <div class=\"bg-gradient-to-br from-gray-50 to-gray-100 rounded-xl p-6 border border-gray-200 hover:shadow-lg transition-all duration-200\" *ngFor=\"let admin of adminStats\">\r\n              <div class=\"mb-4 border-b border-gray-300 pb-3\">\r\n                <h3 class=\"text-lg font-bold text-gray-900\">{{ admin.adminName }}</h3>\r\n                <p class=\"text-sm text-gray-600\">{{ admin.email }}</p>\r\n              </div>\r\n              <div class=\"space-y-4\">\r\n                <div class=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                  <h4 class=\"text-sm font-semibold text-gray-800 mb-2\">Today</h4>\r\n                  <div class=\"space-y-1 text-sm\">\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Questions:</span>\r\n                      <span class=\"font-medium text-green-600\">{{ admin.periods.today.questions }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Exam Papers:</span>\r\n                      <span class=\"font-medium text-purple-600\">{{ admin.periods.today.examPapers }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between border-t pt-1\">\r\n                      <span class=\"font-medium text-gray-800\">Total:</span>\r\n                      <span class=\"font-bold text-blue-600\">{{ admin.periods.today.total }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                  <h4 class=\"text-sm font-semibold text-gray-800 mb-2\">Last 7 Days</h4>\r\n                  <div class=\"space-y-1 text-sm\">\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Questions:</span>\r\n                      <span class=\"font-medium text-green-600\">{{ admin.periods.last7Days.questions }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Exam Papers:</span>\r\n                      <span class=\"font-medium text-purple-600\">{{ admin.periods.last7Days.examPapers }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between border-t pt-1\">\r\n                      <span class=\"font-medium text-gray-800\">Total:</span>\r\n                      <span class=\"font-bold text-blue-600\">{{ admin.periods.last7Days.total }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                  <h4 class=\"text-sm font-semibold text-gray-800 mb-2\">Last 30 Days</h4>\r\n                  <div class=\"space-y-1 text-sm\">\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Questions:</span>\r\n                      <span class=\"font-medium text-green-600\">{{ admin.periods.last30Days.questions }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Exam Papers:</span>\r\n                      <span class=\"font-medium text-purple-600\">{{ admin.periods.last30Days.examPapers }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between border-t pt-1\">\r\n                      <span class=\"font-medium text-gray-800\">Total:</span>\r\n                      <span class=\"font-bold text-blue-600\">{{ admin.periods.last30Days.total }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"bg-white rounded-lg p-3 border border-gray-200\">\r\n                  <h4 class=\"text-sm font-semibold text-gray-800 mb-2\">All Time</h4>\r\n                  <div class=\"space-y-1 text-sm\">\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Questions:</span>\r\n                      <span class=\"font-medium text-green-600\">{{ admin.periods.allTime.questions }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between\">\r\n                      <span class=\"text-gray-600\">Exam Papers:</span>\r\n                      <span class=\"font-medium text-purple-600\">{{ admin.periods.allTime.examPapers }}</span>\r\n                    </div>\r\n                    <div class=\"flex justify-between border-t pt-1\">\r\n                      <span class=\"font-medium text-gray-800\">Total:</span>\r\n                      <span class=\"font-bold text-blue-600\">{{ admin.periods.allTime.total }}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"text-center py-12\" *ngIf=\"!loading.stats && adminStats.length === 0\">\r\n            <i class=\"fas fa-chart-line text-4xl text-gray-400 mb-4\"></i>\r\n            <p class=\"text-gray-600 text-lg\">No admin statistics available.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],
  "mappings": "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",
  "names": []
}

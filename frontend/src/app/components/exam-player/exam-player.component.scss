@use 'sass:color';

/* Base Variables */
$font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
$font-size-base: 1rem; // Assumes 16px
$line-height-base: 1.6;

/* Colors */
$primary-color: #007bff; // Blue
$secondary-color: #6c757d; // Grey
$light-gray: #f8f9fa;
$medium-gray: #dee2e6;
$dark-gray: #343a40;
$white: #ffffff;
$black: #000000;

/* Question State Colors */
$answered-color: #28a745; // Green
$marked-review-color: #ffc107; // Orange/Yellow
$unanswered-color: #dc3545; // Red
$unvisited-bg-color: #e9ecef; // Light Grey for background
$unvisited-text-color: #495057; // Darker Grey for text
$current-question-color: $primary-color; // Blue
$current-question-text-color: $white;

/* Spacing */
$spacing-unit: 1rem;

/* Borders */
$border-radius: 0.3rem;
$border-color: $medium-gray;

/* Breakpoints */
$breakpoint-sm: 576px;
$breakpoint-md: 768px;
$breakpoint-lg: 992px;
$breakpoint-xl: 1200px;

/* Mixins */
@mixin transition($property: all, $duration: 0.2s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

@mixin box-shadow($shadow: 0 0.125rem 0.25rem rgba($black, 0.075)) {
  box-shadow: $shadow;
}

/* Reset and Body */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body { // Assuming this component might be used in a context where body styles are influential
  font-family: $font-family-sans-serif;
  font-size: $font-size-base;
  line-height: $line-height-base;
  color: $dark-gray;
  background-color: $light-gray; // Overall page background
}

/* General Button Styling */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: $spacing-unit * 0.5;
  padding: ($spacing-unit * 0.6) ($spacing-unit * 1.2);
  font-size: $font-size-base * 0.9;
  font-weight: 500;
  line-height: 1.5;
  text-align: center;
  text-decoration: none;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: $border-radius;
  @include transition;

  .material-icons-outlined {
    font-size: $font-size-base * 1.2;
    margin-right: $spacing-unit * 0.25; // Adjust if only icon
  }

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }
}

.btn-primary {
  color: $white;
  background-color: $primary-color;
  border-color: $primary-color;  @include box-shadow;

  &:hover:not(:disabled) {
    background-color: color.adjust($primary-color, $lightness: -10%);
    border-color: color.adjust($primary-color, $lightness: -10%);
  }
}

.btn-secondary {
  color: $dark-gray;
  background-color: $white;
  border-color: $medium-gray;
  @include box-shadow(0 0.125rem 0.25rem rgba($black, 0.05));
  &:hover:not(:disabled) {
    background-color: $light-gray;
    border-color: color.adjust($medium-gray, $lightness: -10%);
  }
}

.btn-danger {
  color: $white;
  background-color: $secondary-color; // Changed to secondary-color (grey)
  border-color: $secondary-color; // Changed to secondary-color (grey)
  @include box-shadow;
  &:hover:not(:disabled) {
    background-color: color.adjust($secondary-color, $lightness: -10%);
    border-color: color.adjust($secondary-color, $lightness: -10%);
  }
}

.btn-lg {
  padding: ($spacing-unit * 0.8) ($spacing-unit * 1.6);
  font-size: $font-size-base * 1.1;
}

/* Start and Resume Screens */
.start-screen, .resume-screen {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: $spacing-unit;
  background-color: $light-gray;
}

.start-card {
  background-color: $white;
  padding: $spacing-unit * 2;
  border-radius: $border-radius * 2;
  @include box-shadow(0 0.5rem 1rem rgba($black, 0.1));
  text-align: center;
  max-width: 450px;
  width: 100%;

  h1 {
    font-size: $font-size-base * 1.75;
    color: $primary-color;
    margin-bottom: $spacing-unit;
  }

  p {
    font-size: $font-size-base * 1.1;
    color: $secondary-color;
    margin-bottom: $spacing-unit * 1.5;
  }

  .button-group {
    display: flex;
    flex-direction: column;
    gap: $spacing-unit;

    @media (min-width: $breakpoint-sm) {
      flex-direction: row;
      justify-content: center;
    }
  }
}

/* Main Exam Layout */
.exam-layout-container {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: $white; // Main content area background

  @media (min-width: $breakpoint-lg) {
    flex-direction: row;
  }
}

/* Sidebar */
.sidebar {
  background-color: $light-gray; // Sidebar background
  border-bottom: 1px solid $border-color;
  padding: $spacing-unit;
  display: flex;
  flex-direction: column;
  
  @media (min-width: $breakpoint-lg) {
    width: 300px;
    min-width: 300px;
    height: 100vh;
    border-right: 1px solid $border-color;
    border-bottom: none;
    overflow-y: auto;
  }
}

.sidebar-header {
  padding-bottom: $spacing-unit;
  margin-bottom: $spacing-unit;
  border-bottom: 1px solid $border-color;

  .exam-title {
    font-size: $font-size-base * 1.25;
    font-weight: 600;
    color: $primary-color;
    margin-bottom: $spacing-unit * 0.75;
  }

  .timer-display {
    display: flex;
    align-items: center;
    gap: $spacing-unit * 0.5;
    font-size: $font-size-base * 1.1;
    font-weight: 500;
    padding: ($spacing-unit * 0.5) ($spacing-unit * 0.75);
    background-color: $white;
    border-radius: $border-radius;
    @include box-shadow(0 1px 2px rgba($black, 0.05));
    margin-bottom: $spacing-unit * 0.75;

    .timer-icon {
      color: $primary-color;
    }
    .time-counter {
      color: $dark-gray;
    }
  }

  .language-switcher {
    display: flex;
    gap: $spacing-unit * 0.5;
    button {
      flex: 1;
      padding: ($spacing-unit * 0.4) ($spacing-unit * 0.8);
      font-size: $font-size-base * 0.85;
      border: 1px solid $medium-gray;
      background-color: $white;
      color: $secondary-color;
      border-radius: $border-radius;
      cursor: pointer;
      @include transition;

      &.active, &:hover {
        background-color: $primary-color;
        color: $white;
        border-color: $primary-color;
      }
    }
  }
}

.section-navigator {
  flex-grow: 1;
  overflow-y: auto; // For scrolling sections if they exceed sidebar height
  margin-bottom: $spacing-unit;
}

.section-block {
  margin-bottom: $spacing-unit * 1.5;

  .section-title {
    font-size: $font-size-base * 1.1;
    font-weight: 600;
    color: $dark-gray;
    margin-bottom: $spacing-unit * 0.75;
    padding-bottom: $spacing-unit * 0.25;
    border-bottom: 1px solid $medium-gray;
  }
}

.question-palette {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(40px, 1fr)); // Consistent size
  gap: $spacing-unit * 0.5;
}

.question-palette-btn {
  width: 40px; // Consistent width
  height: 40px; // Consistent height
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: $font-size-base * 0.9;
  font-weight: 500;
  border-radius: $border-radius;
  border: 1px solid $border-color;
  cursor: pointer;
  @include transition;
  position: relative; // For flag icon

  // Default: Unvisited
  background-color: $unvisited-bg-color;  color: $unvisited-text-color;
  border-color: color.adjust($unvisited-bg-color, $lightness: -10%);

  &:hover {
    border-color: $primary-color;
    transform: translateY(-2px);
    @include box-shadow;
  }
  // States
  &.unanswered { // This might be if they visited but didn't answer, or a specific state
    background-color: color.adjust($unanswered-color, $lightness: 35%);
    color: $unanswered-color;
    border-color: $unanswered-color;
  }
  &.answered {
    background-color: $answered-color;
    color: $white;
    border-color: color.adjust($answered-color, $lightness: -10%);
  }
  &.marked-for-review {
    background-color: $marked-review-color;
    color: $dark-gray; // Ensure contrast with yellow/orange
    border-color: color.adjust($marked-review-color, $lightness: -10%);
  }
    &.current-question-in-palette {
    background-color: $current-question-color;
    color: $current-question-text-color;
    border-color: color.adjust($current-question-color, $lightness: -10%);
    transform: scale(1.1);
    @include box-shadow(0 0 0 0.2rem rgba($current-question-color, 0.25));
    z-index: 1;
  }

  .flag-icon {
    position: absolute;
    top: 2px;
    right: 2px;
    font-size: $font-size-base * 0.8;
    color: $marked-review-color; // Or a distinct flag color if needed
    filter: drop-shadow(0 0 1px $white); // Make it pop a bit
  }
}

.palette-legend {
  margin-top: $spacing-unit;
  padding-top: $spacing-unit;
  border-top: 1px solid $border-color;

  .legend-title {
    font-size: $font-size-base;
    font-weight: 600;
    margin-bottom: $spacing-unit * 0.5;
  }
  .legend-item {
    display: flex;
    align-items: center;
    gap: $spacing-unit * 0.5;
    font-size: $font-size-base * 0.85;
    margin-bottom: $spacing-unit * 0.25;
    color: $secondary-color;    .legend-color-box {
      width: 16px;
      height: 16px;
      border-radius: $border-radius * 0.5;
      border: 1px solid color.adjust($border-color, $lightness: -5%);
    }
    .unanswered-box { background-color: color.adjust($unanswered-color, $lightness: 35%); } // Match palette
    .answered-box { background-color: $answered-color; }
    .marked-box { background-color: $marked-review-color; }
    .current-box { background-color: $current-question-color; }
    // For unvisited, we can show the default button style or a specific box
    // .unvisited-box { background-color: $unvisited-bg-color; } 
  }
  .flag-icon-legend {
    color: $marked-review-color;
    font-size: $font-size-base * 1.1;
  }
}

.sidebar-footer {
  margin-top: auto; // Pushes to the bottom
  padding-top: $spacing-unit;
  border-top: 1px solid $border-color;
  display: flex; // Added for side-by-side buttons
  flex-direction: column; // Stack buttons vertically by default
  gap: $spacing-unit * 0.5; // Space between buttons

  @media (min-width: $breakpoint-sm) { // Side-by-side on larger screens
    flex-direction: row;
    .btn {
      flex: 1; // Make buttons share space equally
    }
  }

  .btn-block {
    width: 100%; // Ensure buttons take full width when stacked
  }
}

/* Main Question Area */
.main-question-area {
  flex: 1;
  padding: $spacing-unit * 1.5;
  overflow-y: auto; // For scrollable question content
  background-color: $white;

  // Temporary time left and save button - integrate better or remove if redundant
  > p:first-of-type { // "Time left: ..."
    font-size: $font-size-base * 0.9;
    color: $secondary-color;
    margin-bottom: $spacing-unit * 0.5;
    text-align: right; // Or integrate into a header bar
  }
  > .btn-secondary { // Manual Save
    margin-bottom: $spacing-unit;
  }
}

.question-display-container {
  background-color: $white;
  // padding: $spacing-unit * 1.5; // Add padding if not already by parent
  // border-radius: $border-radius;
  // @include box-shadow; // Optional shadow for question card
  margin-bottom: $spacing-unit * 1.5;

  .question-text {
    font-size: $font-size-base * 1.2;
    font-weight: 500;
    margin-bottom: $spacing-unit;
    line-height: 1.4;
  }

  .question-history-display {
    font-size: $font-size-base * 0.8;
    color: $secondary-color;
    margin-bottom: $spacing-unit;
    font-style: italic;
  }

  .question-images-options {
    margin-bottom: $spacing-unit * 1.5;
  }

  .question-image-wrapper {
    margin-bottom: $spacing-unit;
    img {
      max-width: 100%;
      height: auto;
      border-radius: $border-radius;
      border: 1px solid $border-color;
    }
  }

  .option-item {
    margin-bottom: $spacing-unit * 0.75;
    label {
      display: flex;
      align-items: center;
      gap: $spacing-unit * 0.75;
      padding: $spacing-unit * 0.75;
      border: 1px solid $border-color;
      border-radius: $border-radius;      cursor: pointer;
      @include transition;
      background-color: $light-gray; // Slight background for options
      
      &:hover {
        border-color: $primary-color;
        background-color: color.adjust($primary-color, $lightness: 45%);
      }

      input[type="radio"] {
        flex-shrink: 0;
        width: 1.25em;
        height: 1.25em;
        margin-top: 0; // Adjust alignment if needed
      }
      .option-image {
        max-width: 150px; // Adjust as needed
        height: auto;
        border-radius: $border-radius * 0.5;
        margin-left: $spacing-unit * 0.5;
      }
    }
    // Style for selected option if needed (can be done via Angular class binding too)
    // input[type="radio"]:checked + label { ... } or parent class
  }
}

.question-actions {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: $spacing-unit * 1.5;
  padding-top: $spacing-unit;
  border-top: 1px solid $border-color;

  .mark-for-review-label {
    display: flex;
    align-items: center;
    gap: $spacing-unit * 0.5;
    font-size: $font-size-base * 0.9;
    color: $secondary-color;
    cursor: pointer;

    input[type="checkbox"] {
      width: 1.1em;
      height: 1.1em;
    }
  }

  .navigation-buttons {
    display: flex;
    gap: $spacing-unit * 0.75;
  }
}

/* Responsive Adjustments */
@media (max-width: #{$breakpoint-lg - 1px}) { // Tablet and Mobile
  .main-question-area {
    padding: $spacing-unit;
  }
}

@media (max-width: #{$breakpoint-md - 1px}) { // Mobile
  .start-card {
    padding: $spacing-unit * 1.5;
    h1 { font-size: $font-size-base * 1.5; }
    p { font-size: $font-size-base; }
  }

  .question-palette {
    grid-template-columns: repeat(auto-fill, minmax(35px, 1fr));
    gap: $spacing-unit * 0.3;
  }
  .question-palette-btn {
    width: 35px;
    height: 35px;
    font-size: $font-size-base * 0.8;
  }

  .question-text {
    font-size: $font-size-base * 1.1;
  }

  .option-item label {
    padding: $spacing-unit * 0.5;
    font-size: $font-size-base * 0.9;
  }

  .question-actions {
    flex-direction: column;
    gap: $spacing-unit;
    align-items: stretch; // Make buttons full width

    .navigation-buttons {
      width: 100%;
    }
  }
}

// Animations (Optional)
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

.start-card { // Apply animation
  animation: fadeIn 0.5s ease-out;
}

// Ensure form doesn't add extra margins if it's just a wrapper
form {
  margin: 0;
  padding: 0;
}

// Hide the default form submit button if it's not the primary action
// form[formGroup="form"] > button[type="submit"] {
//   display: none; // If the (ngSubmit) is only for Enter key and main submit is elsewhere
// }

// Final clean-ups and considerations:
// - Test thoroughly on different devices/screen sizes.
// - Ensure accessibility (contrast ratios, keyboard navigation).